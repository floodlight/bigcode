/**************************************************************************//**
 *
 *
 *
 *****************************************************************************/
#include <sff/sff_config.h>

/* <auto.start.xmacro(ALL).define> */
#ifdef SFF_MEDIA_TYPE_ENTRY
SFF_MEDIA_TYPE_ENTRY(400G_CR8, 400G-CR8)
SFF_MEDIA_TYPE_ENTRY(400G_SR8, 400G-SR8)
SFF_MEDIA_TYPE_ENTRY(400G_SR4, 400G-SR4)
SFF_MEDIA_TYPE_ENTRY(400G_BASE_FR8, 400GBASE-FR8)
SFF_MEDIA_TYPE_ENTRY(400G_FR4, 400G-FR4)
SFF_MEDIA_TYPE_ENTRY(400G_BASE_LR8, 400GBASE-LR8)
SFF_MEDIA_TYPE_ENTRY(400G_LR4, 400G-LR4)
SFF_MEDIA_TYPE_ENTRY(400G_BASE_DR4, 400GBASE-DR4)
SFF_MEDIA_TYPE_ENTRY(400G_AOC, 400G-AOC)
SFF_MEDIA_TYPE_ENTRY(400G_BIDI, 400G-BiDi)
SFF_MEDIA_TYPE_ENTRY(100G_AOC, 100G-AOC)
SFF_MEDIA_TYPE_ENTRY(100G_BASE_CR4, 100GBASE-CR4)
SFF_MEDIA_TYPE_ENTRY(100G_BASE_SR4, 100GBASE-SR4)
SFF_MEDIA_TYPE_ENTRY(100G_BASE_LR4, 100GBASE-LR4)
SFF_MEDIA_TYPE_ENTRY(100G_BASE_ER4, 100GBASE-ER4)
SFF_MEDIA_TYPE_ENTRY(100G_CWDM4, 100G-CWDM4)
SFF_MEDIA_TYPE_ENTRY(100G_PSM4, 100G-PSM4)
SFF_MEDIA_TYPE_ENTRY(100G_SWDM4, 100G-SWDM4)
SFF_MEDIA_TYPE_ENTRY(100G_PAM4_BIDI, 100G-PAM4-BIDI)
SFF_MEDIA_TYPE_ENTRY(100G_AOC_LBER, 100G-AOC-LBER)
SFF_MEDIA_TYPE_ENTRY(100G_ACC_LBER, 100G-ACC-LBER)
SFF_MEDIA_TYPE_ENTRY(100G_BASE_DR, 100GBASE-DR)
SFF_MEDIA_TYPE_ENTRY(100G_BASE_FR, 100GBASE-FR)
SFF_MEDIA_TYPE_ENTRY(100G_BASE_LR, 100GBASE-LR)
SFF_MEDIA_TYPE_ENTRY(40G_BASE_CR4, 40GBASE-CR4)
SFF_MEDIA_TYPE_ENTRY(40G_BASE_SR4, 40GBASE-SR4)
SFF_MEDIA_TYPE_ENTRY(40G_BASE_LR4, 40GBASE-LR4)
SFF_MEDIA_TYPE_ENTRY(40G_BASE_LM4, 40GBASE-LM4)
SFF_MEDIA_TYPE_ENTRY(40G_BASE_ACTIVE, 40GBASE-ACTIVE)
SFF_MEDIA_TYPE_ENTRY(40G_BASE_CR, 40GBASE-CR)
SFF_MEDIA_TYPE_ENTRY(40G_BASE_SR2, 40GBASE-SR2)
SFF_MEDIA_TYPE_ENTRY(40G_BASE_SM4, 40GBASE-SM4)
SFF_MEDIA_TYPE_ENTRY(40G_BASE_ER4, 40GBASE-ER4)
SFF_MEDIA_TYPE_ENTRY(40G_BASE_SWDM4, 40GBASE-SWDM4)
SFF_MEDIA_TYPE_ENTRY(25G_BASE_CR, 25GBASE-CR)
SFF_MEDIA_TYPE_ENTRY(25G_BASE_SR, 25GBASE-SR)
SFF_MEDIA_TYPE_ENTRY(25G_BASE_LR, 25GBASE-LR)
SFF_MEDIA_TYPE_ENTRY(25G_BASE_AOC, 25GBASE-AOC)
SFF_MEDIA_TYPE_ENTRY(10G_BASE_SR, 10GBASE-SR)
SFF_MEDIA_TYPE_ENTRY(10G_BASE_LR, 10GBASE-LR)
SFF_MEDIA_TYPE_ENTRY(10G_BASE_LRM, 10GBASE-LRM)
SFF_MEDIA_TYPE_ENTRY(10G_BASE_ER, 10GBASE-ER)
SFF_MEDIA_TYPE_ENTRY(10G_BASE_CR, 10GBASE-CR)
SFF_MEDIA_TYPE_ENTRY(10G_BASE_SX, 10GBASE-SX)
SFF_MEDIA_TYPE_ENTRY(10G_BASE_LX, 10GBASE-LX)
SFF_MEDIA_TYPE_ENTRY(10G_BASE_ZR, 10GBASE-ZR)
SFF_MEDIA_TYPE_ENTRY(10G_BASE_SRL, 10GBASE-SRL)
SFF_MEDIA_TYPE_ENTRY(10G_BASE_T, 10GBASE-T)
SFF_MEDIA_TYPE_ENTRY(1G_BASE_SX, 1GBASE-SX)
SFF_MEDIA_TYPE_ENTRY(1G_BASE_LX, 1GBASE-LX)
SFF_MEDIA_TYPE_ENTRY(1G_BASE_ZX, 1GBASE-ZX)
SFF_MEDIA_TYPE_ENTRY(1G_BASE_CX, 1GBASE-CX)
SFF_MEDIA_TYPE_ENTRY(1G_BASE_T, 1GBASE-T)
SFF_MEDIA_TYPE_ENTRY(100_BASE_LX, 100BASE-LX)
SFF_MEDIA_TYPE_ENTRY(100_BASE_FX, 100BASE-FX)
SFF_MEDIA_TYPE_ENTRY(4X_MUX, 4X-MUX)
#undef SFF_MEDIA_TYPE_ENTRY
#endif

#ifdef SFF_MODULE_CAP_ENTRY
SFF_MODULE_CAP_ENTRY(F_100)
SFF_MODULE_CAP_ENTRY(F_1G)
SFF_MODULE_CAP_ENTRY(F_10G)
SFF_MODULE_CAP_ENTRY(F_25G)
SFF_MODULE_CAP_ENTRY(F_40G)
SFF_MODULE_CAP_ENTRY(F_100G)
SFF_MODULE_CAP_ENTRY(F_400G)
#undef SFF_MODULE_CAP_ENTRY
#endif

#ifdef SFF_MODULE_TYPE_ENTRY
SFF_MODULE_TYPE_ENTRY(400G_CR8, 400G-CR8)
SFF_MODULE_TYPE_ENTRY(400G_SR8, 400G-SR8)
SFF_MODULE_TYPE_ENTRY(400G_SR4, 400G-SR4)
SFF_MODULE_TYPE_ENTRY(400G_BASE_FR8, 400GBASE-FR8)
SFF_MODULE_TYPE_ENTRY(400G_FR4, 400G-FR4)
SFF_MODULE_TYPE_ENTRY(400G_BASE_LR8, 400GBASE-LR8)
SFF_MODULE_TYPE_ENTRY(400G_LR4, 400G-LR4)
SFF_MODULE_TYPE_ENTRY(400G_BASE_DR4, 400GBASE-DR4)
SFF_MODULE_TYPE_ENTRY(400G_AOC, 400G-AOC)
SFF_MODULE_TYPE_ENTRY(400G_BIDI, 400G-BiDi)
SFF_MODULE_TYPE_ENTRY(100G_AOC, 100G-AOC)
SFF_MODULE_TYPE_ENTRY(100G_BASE_CR4, 100GBASE-CR4)
SFF_MODULE_TYPE_ENTRY(100G_BASE_SR4, 100GBASE-SR4)
SFF_MODULE_TYPE_ENTRY(100G_BASE_LR4, 100GBASE-LR4)
SFF_MODULE_TYPE_ENTRY(100G_BASE_ER4, 100GBASE-ER4)
SFF_MODULE_TYPE_ENTRY(100G_CWDM4, 100G-CWDM4)
SFF_MODULE_TYPE_ENTRY(100G_PSM4, 100G-PSM4)
SFF_MODULE_TYPE_ENTRY(100G_SWDM4, 100G-SWDM4)
SFF_MODULE_TYPE_ENTRY(100G_PAM4_BIDI, 100G-PAM4-BIDI)
SFF_MODULE_TYPE_ENTRY(100G_AOC_LBER, 100G-AOC-LBER)
SFF_MODULE_TYPE_ENTRY(100G_ACC_LBER, 100G-ACC-LBER)
SFF_MODULE_TYPE_ENTRY(100G_BASE_DR, 100GBASE-DR)
SFF_MODULE_TYPE_ENTRY(100G_BASE_FR, 100GBASE-FR)
SFF_MODULE_TYPE_ENTRY(100G_BASE_LR, 100GBASE-LR)
SFF_MODULE_TYPE_ENTRY(40G_BASE_CR4, 40GBASE-CR4)
SFF_MODULE_TYPE_ENTRY(40G_BASE_SR4, 40GBASE-SR4)
SFF_MODULE_TYPE_ENTRY(40G_BASE_LR4, 40GBASE-LR4)
SFF_MODULE_TYPE_ENTRY(40G_BASE_LM4, 40GBASE-LM4)
SFF_MODULE_TYPE_ENTRY(40G_BASE_ACTIVE, 40GBASE-ACTIVE)
SFF_MODULE_TYPE_ENTRY(40G_BASE_CR, 40GBASE-CR)
SFF_MODULE_TYPE_ENTRY(40G_BASE_SR2, 40GBASE-SR2)
SFF_MODULE_TYPE_ENTRY(40G_BASE_SM4, 40GBASE-SM4)
SFF_MODULE_TYPE_ENTRY(40G_BASE_ER4, 40GBASE-ER4)
SFF_MODULE_TYPE_ENTRY(40G_BASE_SWDM4, 40GBASE-SWDM4)
SFF_MODULE_TYPE_ENTRY(25G_BASE_CR, 25GBASE-CR)
SFF_MODULE_TYPE_ENTRY(25G_BASE_SR, 25GBASE-SR)
SFF_MODULE_TYPE_ENTRY(25G_BASE_LR, 25GBASE-LR)
SFF_MODULE_TYPE_ENTRY(25G_BASE_AOC, 25GBASE-AOC)
SFF_MODULE_TYPE_ENTRY(10G_BASE_SR, 10GBASE-SR)
SFF_MODULE_TYPE_ENTRY(10G_BASE_LR, 10GBASE-LR)
SFF_MODULE_TYPE_ENTRY(10G_BASE_LRM, 10GBASE-LRM)
SFF_MODULE_TYPE_ENTRY(10G_BASE_ER, 10GBASE-ER)
SFF_MODULE_TYPE_ENTRY(10G_BASE_CR, 10GBASE-CR)
SFF_MODULE_TYPE_ENTRY(10G_BASE_SX, 10GBASE-SX)
SFF_MODULE_TYPE_ENTRY(10G_BASE_LX, 10GBASE-LX)
SFF_MODULE_TYPE_ENTRY(10G_BASE_ZR, 10GBASE-ZR)
SFF_MODULE_TYPE_ENTRY(10G_BASE_SRL, 10GBASE-SRL)
SFF_MODULE_TYPE_ENTRY(10G_BASE_T, 10GBASE-T)
SFF_MODULE_TYPE_ENTRY(1G_BASE_SX, 1GBASE-SX)
SFF_MODULE_TYPE_ENTRY(1G_BASE_LX, 1GBASE-LX)
SFF_MODULE_TYPE_ENTRY(1G_BASE_ZX, 1GBASE-ZX)
SFF_MODULE_TYPE_ENTRY(1G_BASE_CX, 1GBASE-CX)
SFF_MODULE_TYPE_ENTRY(1G_BASE_T, 1GBASE-T)
SFF_MODULE_TYPE_ENTRY(100_BASE_LX, 100BASE-LX)
SFF_MODULE_TYPE_ENTRY(100_BASE_FX, 100BASE-FX)
SFF_MODULE_TYPE_ENTRY(4X_MUX, 4X-MUX)
#undef SFF_MODULE_TYPE_ENTRY
#endif

#ifdef SFF_SFP_TYPE_ENTRY
SFF_SFP_TYPE_ENTRY(SFP, SFP)
SFF_SFP_TYPE_ENTRY(QSFP, QSFP)
SFF_SFP_TYPE_ENTRY(QSFP_PLUS, QSFP+)
SFF_SFP_TYPE_ENTRY(QSFP28, QSFP28)
SFF_SFP_TYPE_ENTRY(SFP28, SFP28)
SFF_SFP_TYPE_ENTRY(QSFP_DD, QSFP-DD)
#undef SFF_SFP_TYPE_ENTRY
#endif
/* <auto.end.xmacro(ALL).define> */

/* <auto.start.xenum(ALL).define> */
#ifdef SFF_ENUMERATION_ENTRY
SFF_ENUMERATION_ENTRY(sff_cmis_active_cable_code, "")
SFF_ENUMERATION_ENTRY(sff_cmis_base_t_code, "")
SFF_ENUMERATION_ENTRY(sff_cmis_mmf_code, "")
SFF_ENUMERATION_ENTRY(sff_cmis_module_type, "")
SFF_ENUMERATION_ENTRY(sff_cmis_passive_copper_code, "")
SFF_ENUMERATION_ENTRY(sff_cmis_smf_code, "")
SFF_ENUMERATION_ENTRY(sff_dom_field_flag, "")
SFF_ENUMERATION_ENTRY(sff_dom_spec, "")
SFF_ENUMERATION_ENTRY(sff_media_type, "")
SFF_ENUMERATION_ENTRY(sff_module_caps, "")
SFF_ENUMERATION_ENTRY(sff_module_type, "")
SFF_ENUMERATION_ENTRY(sff_sfp_type, "")
#undef SFF_ENUMERATION_ENTRY
#endif
/* <auto.end.xenum(ALL).define> */
